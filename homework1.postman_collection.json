{
	"info": {
		"_postman_id": "a5b1f6c6-d9c1-4c3e-9b93-3a8b6d12cd6f",
		"name": "homework1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5007/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Спарсить response body в json\r",
							"let jsonData = pm.response.json()\r",
							"// Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.name).to.deep.eql(\"alexandr\");\r",
							"});\r",
							"// // Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(jsonData.age).to.deep.eql(\"26\");\r",
							"});\r",
							"// // Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.deep.eql(10);\r",
							"});\r",
							"// // Спарсить request\r",
							"let req = (request.data);\r",
							"\r",
							"console.log (req)\r",
							"let salary_11 = req.salary * 1\r",
							"\r",
							"let salary_10 = salary_11 * 4\r",
							"\r",
							"\r",
							"// // Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Your test request name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"// // Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Your test request age\", function () {\r",
							"    pm.expect(jsonData.age).to.deep.eql(req.age);\r",
							"});\r",
							"// // Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Your test request salary\", function () {\r",
							"pm.expect(jsonData.salary).to.equal(parseInt(req.salary))\r",
							"})\r",
							"\r",
							"pm.test(\"Your test request salary1\", function () {\r",
							"pm.expect(jsonData.salary).to.equal(salary_11)\r",
							"})\r",
							"// // Вывести в консоль параметр family из response.\r",
							"console.log(jsonData.family)\r",
							"// // Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"let salary_12 = jsonData.family.u_salary_1_5_year\r",
							"console.log (salary_12)\r",
							"\r",
							"pm.test(\"Your test request salary\", function () {\r",
							"pm.expect(salary_12).to.equal(parseInt(salary_10))\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "alexandr",
							"type": "text"
						},
						{
							"key": "age",
							"value": "26",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "10",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/user_info_3 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Спарсить response body в json\r",
							"let jsonData = pm.response.json()\r",
							"console.log (jsonData.salary)\r",
							"// // Спарсить request\r",
							"// let req = pm.request.url.getQueryString()\r",
							"let req = pm.request.url.query.toObject()\r",
							"console.log (req)\r",
							"console.log (req.name)\r",
							"console.log (req.salary)\r",
							"// // Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Your test request name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"// // Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Your test request age\", function () {\r",
							"    pm.expect(jsonData.age).to.deep.eql(req.age);\r",
							"});\r",
							"// // Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Your test request salary\", function () {\r",
							"pm.expect(jsonData.salary).to.equal(parseInt(req.salary))\r",
							"})\r",
							"pm.test(\"Your test request salary\", function () {\r",
							"pm.expect(jsonData.salary).to.equal(+(req.salary))\r",
							"})\r",
							"// Вывести в консоль параметр family из response.\r",
							"console.log(jsonData.family)\r",
							"\r",
							"\r",
							"// Проверить, что параметр name имеет значение Luky\r",
							"pm.test(\"Your test request salary\", function () {\r",
							"pm.expect(jsonData.family.pets.dog.name).to.deep.equal(\"Luky\")\r",
							"})\r",
							"//  Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"Your test request salary\", function () {\r",
							"pm.expect(jsonData.family.pets.dog.age).to.deep.equal(4)\r",
							"})\r",
							"\r",
							"console.log(jsonData.family.pets.dog)\r",
							"\r",
							"// pm.test(\"Your test request salary1\", function () {\r",
							"// pm.expect(jsonData.salary).to.equal(salary_11)\r",
							"// })\r",
							"\r",
							"// // Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"// let salary_12 = jsonData.family.u_salary_1_5_year\r",
							"// console.log (salary_12)\r",
							"\r",
							"// pm.test(\"Your test request salary\", function () {\r",
							"// pm.expect(salary_12).to.equal(parseInt(salary_10))\r",
							"// })\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5007/object_info_3?name=alexandr&age=26&salary=10",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "alexandr"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "10"
						}
					]
				}
			},
			"response": []
		}
	]
}