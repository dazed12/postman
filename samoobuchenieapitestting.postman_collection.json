{
	"info": {
		"_postman_id": "2e1bbf15-880e-4015-958c-724cef7a1473",
		"name": "samoobuchenie challange api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20442465"
	},
	"item": [
		{
			"name": "post challenger",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/challenger",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"challenger"
					]
				}
			},
			"response": []
		},
		{
			"name": "get challenges",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "8c88885a-5683-4da8-9c1b-4ed30af302ec",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/challenges",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"challenges"
					],
					"query": [
						{
							"key": "status",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get todos",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Challenger",
						"value": "8c88885a-5683-4da8-9c1b-4ed30af302ec",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id4 -get todo challenges",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "8c88885a-5683-4da8-9c1b-4ed30af302ec",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todo",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 5 -Issue a GET request on the `/todos/{id}` end point to return a specific todo",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "8c88885a-5683-4da8-9c1b-4ed30af302ec",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos/{{id}}",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 6 - Issue a GET request on the `/todos/{id}` end point for a todo that does not exist\"",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos/40",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos",
						"40"
					]
				}
			},
			"response": []
		},
		{
			"name": "id7 - Issue a HEAD request on the `/todos` end point\",",
			"request": {
				"method": "HEAD",
				"header": [
					{
						"key": "X-Challenger",
						"value": "8c88885a-5683-4da8-9c1b-4ed30af302ec",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 8 Issue a POST request to successfully create a todo\"",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "8c88885a-5683-4da8-9c1b-4ed30af302ec",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n            \"title\": \"homework\",\r\n            \"doneStatus\": true,\r\n            \"description\": \"\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 9 Issue a GET request on the `/todos` end point with a query filter to get only todos which are 'done'. There must exist both 'done' and 'not done' todos, to pass this challenge",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Challenger",
						"value": "8c88885a-5683-4da8-9c1b-4ed30af302ec",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos?doneStatus=true",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "id 10 Issue a POST request to create a todo but fail validation on the `doneStatus` field",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"doneStatus\": \"false\"\r\n}"
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 11 ue a POST request to successfully update a todo\",",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos/836",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos",
						"836"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 12 Issue a DELETE request to successfully delete a todo",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos/830",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos",
						"830"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 13 Issue an OPTIONS request on the `/todos` end point. You might want to manually check the 'Allow' header in the response is as expected.\",",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [
					{
						"key": "Accept",
						"value": " application/xml",
						"type": "text"
					},
					{
						"key": "X-Challenger",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 14 Issue a GET request on the `/todos` end point with an `Accept` header of `application/xml` to receive results in XML format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": " application/xml",
						"type": "text"
					},
					{
						"key": "X-Challenger",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 15 Issue a GET request on the `/todos` end point with an `Accept` header of `application/json` to receive results in JSON format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 16 Issue a GET request on the `/todos` end point with an `Accept` header of `*/*` to receive results in default JSON format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 17 Issue a GET request on the `/todos` end point with an `Accept` header of `application/xml, application/json` to receive results in the preferred XML format\",",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml,application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Challenger",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 18 Issue a GET request on the `/todos` end point with no `Accept` header present in the message to receive results in default JSON format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 19 Issue a GET request on the `/todos` end point with an `Accept` header `application/gzip` to receive 406 'NOT ACCEPTABLE' status code\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/gzip",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 19 Issue a GET request on the `/todos` end point with an `Accept` header `application/gzip` to receive 406 'NOT ACCEPTABLE' status code\" Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/gzip",
						"type": "text"
					},
					{
						"key": "X-Challenger",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "id 19 Issue a GET request on the `/todos` end point with an `Accept` header `application/gzip` to receive 406 'NOT ACCEPTABLE' status code\" Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \"name\": \"POST /todos JSON\",\r\n            \"description\": \"Issue a POST request on the `/todos` end point to create a todo using Content-Type `application/json`, and Accepting only JSON ie. Accept header of `application/json`\",\r\n            \"status\": true\r\n        }"
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		}
	]
}
